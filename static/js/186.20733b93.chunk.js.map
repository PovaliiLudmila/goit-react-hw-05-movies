{"version":3,"file":"static/js/186.20733b93.chunk.js","mappings":"+SACMA,EAAM,mCACZC,EAAAA,EAAAA,SAAAA,QAAyB,gCAClB,IAAMC,EAAW,mCAAG,oGACAD,EAAAA,EAAAA,IAAA,qCAAwCD,IADxC,cACjBG,EADiB,yBAEhBA,EAASC,KAAKC,SAFE,2CAAH,qDAKTC,EAAQ,mCAAG,WAAMC,GAAN,uFACCN,EAAAA,EAAAA,IAAA,+BACGD,EADH,kBACgBO,IAFjB,cAChBJ,EADgB,yBAIfA,EAASC,KAAKC,SAJC,2CAAH,sDAORG,EAAU,mCAAG,WAAMC,GAAN,uFACDR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,oBAAsCT,IADrC,cAClBG,EADkB,yBAEjBA,EAASC,MAFQ,2CAAH,sDAKVM,EAAO,mCAAG,WAAMD,GAAN,uFACER,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,4BAA8CT,IADhD,cACfG,EADe,yBAEdA,EAASC,KAAKO,MAFA,2CAAH,sDAKPC,EAAU,mCAAG,WAAMH,GAAN,uFACDR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,4BAA8CT,IAD7C,cAClBG,EADkB,yBAEjBA,EAASC,KAAKC,SAFG,2CAAH,qD,8ECSzB,UA9BgB,WACd,OAAwCQ,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACQN,GAAYO,EAAAA,EAAAA,MAAZP,QAMR,IAJAQ,EAAAA,EAAAA,YAAU,YACRL,EAAAA,EAAAA,IAAWH,GAASS,KAAKH,EAC1B,GAAE,CAACN,IAECK,EAIL,OACE,yBACGA,EAAaK,OAAS,GACrB,wBACGL,EAAaM,KAAI,SAAAC,GAAM,OACtB,2BACE,qCAAaA,EAAOC,WACpB,uBAAID,EAAOE,YAFJF,EAAOG,GADM,MAQ1B,uCAIP,C","sources":["API/Api.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\nconst KEY = '1eb44fc204ac80c9b07cb331a559234b';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nexport const getTrending = async () => {\n    const response = await axios.get(`trending/movie/day?api_key=${KEY}`);\n    return response.data.results;\n  };\n  \n  export const getQuery = async query => {\n    const response = await axios.get(\n      `search/movie?api_key=${KEY}&query=${query}`\n    );\n    return response.data.results;\n  };\n  \n  export const getDetails = async movieId => {\n    const response = await axios.get(`movie/${movieId}?api_key=${KEY}`);\n    return response.data;\n  };\n  \n  export const getCast = async movieId => {\n    const response = await axios.get(`movie/${movieId}/credits?api_key=${KEY}`);\n    return response.data.cast;\n  };\n  \n  export const getReviews = async movieId => {\n    const response = await axios.get(`movie/${movieId}/reviews?api_key=${KEY}`);\n    return response.data.results;\n  };","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviews } from 'API/Api';\n\nconst Reviews = () => {\n  const [movieReviews, setMovieReviews] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getReviews(movieId).then(setMovieReviews);\n  }, [movieId]);\n\n  if (!movieReviews) {\n    return;\n  }\n\n  return (\n    <div>\n      {movieReviews.length > 0 ? (\n        <ul>\n          {movieReviews.map(review => (\n            <li key={review.id}>\n              <h3>Author: {review.author}</h3>\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        'There is no review of this film yet'\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;"],"names":["KEY","axios","getTrending","response","data","results","getQuery","query","getDetails","movieId","getCast","cast","getReviews","useState","movieReviews","setMovieReviews","useParams","useEffect","then","length","map","review","author","content","id"],"sourceRoot":""}