{"version":3,"file":"static/js/764.af764630.chunk.js","mappings":"+SACMA,EAAM,mCACZC,EAAAA,EAAAA,SAAAA,QAAyB,gCAClB,IAAMC,EAAW,mCAAG,oGACAD,EAAAA,EAAAA,IAAA,qCAAwCD,IADxC,cACjBG,EADiB,yBAEhBA,EAASC,KAAKC,SAFE,2CAAH,qDAKTC,EAAQ,mCAAG,WAAMC,GAAN,uFACCN,EAAAA,EAAAA,IAAA,+BACGD,EADH,kBACgBO,IAFjB,cAChBJ,EADgB,yBAIfA,EAASC,KAAKC,SAJC,2CAAH,sDAORG,EAAU,mCAAG,WAAMC,GAAN,uFACDR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,oBAAsCT,IADrC,cAClBG,EADkB,yBAEjBA,EAASC,MAFQ,2CAAH,sDAKVM,EAAO,mCAAG,WAAMD,GAAN,uFACER,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,4BAA8CT,IADhD,cACfG,EADe,yBAEdA,EAASC,KAAKO,MAFA,2CAAH,sDAKPC,EAAU,mCAAG,WAAMH,GAAN,uFACDR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,4BAA8CT,IAD7C,cAClBG,EADkB,yBAEjBA,EAASC,KAAKC,SAFG,2CAAH,qD,0HCrBzBQ,EAAAA,OAAAA,KAAY,CAAEC,oBAAoB,EAAMC,cAAc,IA0DtD,UAxDe,WACb,OAAmCC,EAAAA,EAAAA,UAAS,IAA5C,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MACXhB,EAAQa,EAAaI,IAAI,UAC/B,GAAsCR,EAAAA,EAAAA,UAAST,GAAgB,IAA/D,eAAOkB,EAAP,KAAoBC,EAApB,KALmB,wCAUnB,WAA4BC,GAA5B,iEACEA,EAAEC,iBACFP,EAAuC,KAAvBI,EAAYI,OAAgB,CAAEC,OAAQL,GAAgB,CAAC,GAE5C,KAAvBA,EAAYI,SACdhB,EAAAA,OAAAA,QAAe,sCACfK,EAAiB,KANrB,4CAVmB,sBAmCnB,OAfAa,EAAAA,EAAAA,YAAU,WAAM,wCACd,0FAESxB,EAFT,kDAGID,EAAAA,EAAAA,IAASC,GAAOyB,KAAKd,GAEgB,IAAjCZ,EAAAA,GAAAA,KAAAA,QAAAA,QAAoCO,EAAAA,OAAAA,QAAe,+BAL3D,uBAQEK,EAAiBZ,EAAAA,GAAAA,KAAAA,SARnB,wEADc,uBAAC,WAAD,wBAYd2B,EACD,GAAE,CAAC1B,KAGF,kBAAM2B,SApCW,4CAoCjB,WACE,kBAAOC,KAAK,OAAOC,MAAOX,EAAaY,SA9B3C,SAAuBV,GACrBD,EAAeC,EAAEW,OAAOF,MACzB,KA6BG,mBAAQD,KAAK,SAAb,oBACmB,IAAlBlB,EAAOsB,QAAgBhC,GACtB,4DAEA,wBACGU,EAAOuB,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAASC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMvB,GAAnD,SACGmB,EAAMK,SAFFL,EAAME,GADA,QAW1B,C","sources":["API/Api.js","pages/Movies.js"],"sourcesContent":["import axios from 'axios';\nconst KEY = '1eb44fc204ac80c9b07cb331a559234b';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nexport const getTrending = async () => {\n    const response = await axios.get(`trending/movie/day?api_key=${KEY}`);\n    return response.data.results;\n  };\n  \n  export const getQuery = async query => {\n    const response = await axios.get(\n      `search/movie?api_key=${KEY}&query=${query}`\n    );\n    return response.data.results;\n  };\n  \n  export const getDetails = async movieId => {\n    const response = await axios.get(`movie/${movieId}?api_key=${KEY}`);\n    return response.data;\n  };\n  \n  export const getCast = async movieId => {\n    const response = await axios.get(`movie/${movieId}/credits?api_key=${KEY}`);\n    return response.data.cast;\n  };\n  \n  export const getReviews = async movieId => {\n    const response = await axios.get(`movie/${movieId}/reviews?api_key=${KEY}`);\n    return response.data.results;\n  };","import { getQuery } from '../API/Api';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams, NavLink, useLocation } from 'react-router-dom';\nimport { Notify } from 'notiflix';\nNotify.init({ showOnlyTheLastOne: true, clickToClose: true });\n\nconst Movies = () => {\n  const [movies, setSearchedMovie] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n  const query = searchParams.get('search');\n  const [queryString, setQueryString] = useState(query ? query : '');\n\n  function onInputChange(e) {\n    setQueryString(e.target.value);\n  }\n  async function handleSubmit(e) {\n    e.preventDefault();\n    setSearchParams(queryString.trim() !== '' ? { search: queryString } : {});\n\n    if (queryString.trim() === '') {\n      Notify.warning('Please enter movie title to search');\n      setSearchedMovie([]);\n    }\n  }\n  \n  useEffect(() => {\n    async function getData() {\n      try {\n        if (!query) return;\n        getQuery(query).then(setSearchedMovie);\n        \n        if (getQuery.data.results.length === 0) Notify.failure('Sorry, this movie not found');\n      } finally {\n  \n      setSearchedMovie(getQuery.data.results);\n      }\n    }\n    getData();\n  }, [query]);\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"text\" value={queryString} onChange={onInputChange} />\n      <button type=\"submit\">Search</button>\n      {movies.length === 0 && query ? (\n        <div>No results. Please try again.</div>\n      ) : (\n        <ul>\n          {movies.map(movie => (\n            <li key={movie.id}>\n              <NavLink to={`/movies/${movie.id}`} state={{ from: location }}>\n                {movie.title}\n              </NavLink>\n            </li>\n          ))}\n        </ul>\n      )}\n    </form>\n  );\n};\n\nexport default Movies;"],"names":["KEY","axios","getTrending","response","data","results","getQuery","query","getDetails","movieId","getCast","cast","getReviews","Notify","showOnlyTheLastOne","clickToClose","useState","movies","setSearchedMovie","useSearchParams","searchParams","setSearchParams","location","useLocation","get","queryString","setQueryString","e","preventDefault","trim","search","useEffect","then","getData","onSubmit","type","value","onChange","target","length","map","movie","to","id","state","from","title"],"sourceRoot":""}